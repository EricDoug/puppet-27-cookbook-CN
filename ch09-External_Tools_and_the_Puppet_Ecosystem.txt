[[chapter09]]
== 扩展工具和 Puppet 生态环境

[quote, Belinda Asbell,]
Unix is the answer, but only if you phrase the question very carefully.

在本章中，我们将学习如下内容：

- {Recipe901}
- {Recipe902}
- {Recipe903}
- {Recipe904}
- {Recipe905}
- {Recipe906}
- {Recipe907}
- {Recipe908}
- {Recipe909}
- {Recipe910}
- {Recipe911}


Puppet 本身就是一个有用的工具，但组合使用 Puppet 与其他工具和框架可以得到更大的利益。
在本章我们会看到：使用工具（Facter、++cft++ 和 ++puppet resource++）获得 Puppet 所需的数据；
使用工具（Foreman 和 Puppet Dashboard）管理和报告出自 Puppet 的数据。

你还会学到：如何通过创建你自己自定义的资源类型扩展 Puppet，并在不同的平台上实现自定义类型；
如何使用外部节点分类器脚本整合 Puppet 和数据库（例如：LDAP）；
如何使用来自 Puppet Forge 的公共模块；以及
Puppet 如何与系统管理框架 MCollective 协同工作。


include::recipes/ch09sec01-creating_custom_facter_facts.txt[]

include::recipes/ch09sec02-executing_commands_before_and_after_puppet_runs.txt[]

include::recipes/ch09sec03-generating_manifests_from_shell_sessions.txt[]

include::recipes/ch09sec04-generating_manifests_from_a_running_system.txt[]

include::recipes/ch09sec05-using_puppet_dashboard.txt[]

include::recipes/ch09sec06-using_foreman.txt[]

include::recipes/ch09sec07-using_mcollective.txt[]

include::recipes/ch09sec08-using_public_modules.txt[]

include::recipes/ch09sec09-using_an_external_node_classifier.txt[]

include::recipes/ch09sec10-creating_your_own_resource_types.txt[]

include::recipes/ch09sec11-creating_your_own_providers.txt[]
