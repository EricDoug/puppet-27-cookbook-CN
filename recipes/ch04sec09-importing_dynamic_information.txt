[[ch04sec09]]
=== Importing dynamic information

Even though some system administrators like to wall themselves off from the rest of the office
using piles of old printers, we all need to exchange information with other departments from
time to time. For example, you may need to insert data into your Puppet manifests which is
derived from some outside source. The +generate+ function is very useful for this.

==== Getting ready…

Create the script +/usr/local/bin/latest-puppet.rb+ on the Puppetmaster with the
following contents:

[source,ruby]
----
#!/usr/bin/ruby
require 'open-uri'
page = open("http://www.puppetlabs.com/misc/download-options/").read
print page.match(/stable version is ([\d\.]*)/)[1]
----

==== How to do it…

1. Add the following to your manifest:
+
----
$latestversion = generate("/usr/local/bin/latest-puppet.rb")
notify { "The latest stable Puppet version is ${latestversion}.
You're using ${puppetversion}.": }
----

2. Run Puppet:
+
....
# puppet agent --test
notice: The latest stable Puppet version is 2.6.5. You're using 2.6.3.
....

==== How it works…

The +generate+ function runs the specified script or program on the Puppetmaster (not
the client) and returns the result - in this case, the version number of the latest stable
Puppet release.

I don't recommend you run this script in production, as Puppet Labs have a habit of
rearranging their web site, but you get the idea. Anything a script can do, print, fetch, or
calculate - for example the results of a database query - can be brought into your manifest
using +generate+.

It's worth remembering that, just as with embedded Ruby calls in templates, the +generate+
function is run on the Puppetmaster and not on the node that is running Puppet. I once made
this mistake by calling `/bin/hostname` in a template and finding to my surprise that all my
nodes were apparently named puppet.

When you need to get information specifically about the node, this is best done with a
custom fact.

==== There's more…

If you need to pass arguments to the executable called by +generate+, add them as extra
arguments to the function call as follows:

----
$latestpuppet = generate("/usr/local/bin/latest-version.rb", "puppet")
$latestmc = generate("/usr/local/bin/latest-version.rb",
"mcollective")
----

Puppet will try to protect you from malicious shell calls by restricting the characters you can
use in a call to +generate+, so shell pipelines aren't allowed, for example. The simplest and
safest thing to do is to put all your logic into a script and then call that script.

==== See also

- <<ch09sec01,Creating custom Facter facts>> in Chapter 9
- <<ch04sec10,Importing data from CSV files>> in this chapter
