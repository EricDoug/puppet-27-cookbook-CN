[[ch05sec01]]
=== {Recipe501}

你知道 Puppet 能做微创手术吗？ 通常，我们不希望将整个配置文件交由 Puppet
管理而仅仅是在配置文件中添加某项设置 -- 尤其是如果该文件是由别人管理，我们不能覆盖它的情况。
一种简单而有用的方法是，如果配置文件中不存在指定的行就添加这行配置。例如：
添加一个内核模块名到配置文件 +/etc/modules+ 告知内核在启动时加载此模块。

你可以使用一个 +exec+ 资源达成此任务。下面的例子将展示如何使用 +exec+
向一个文本文件追加一行配置。

==== {Howtodoit}

1. 使用如下内容创建 +/etc/puppet/manifests/utils.pp+ 文件：
+
[source,puppet]
----
define append_if_no_such_line($file, $line) {
    exec { "/bin/echo '$line' >> '$file'":
        unless => "/bin/grep -Fx '$line' '$file'",
    }
}
----

2. 添加如下行到 +/etc/puppet/manifests/site.pp+ 文件：
+
[source,puppet]
----
import "utils.pp"
----

3. 添加如下代码到你的配置清单：
+
[source,puppet]
----
append_if_no_such_line { "enable-ip-conntrack":
    file => "/etc/modules",
    line => "ip_conntrack",
}
----

4. 运行 Puppet：
+
....
# puppet agent --test
info: Retrieving plugin
info: Caching catalog for cookbook.bitfieldconsulting.com
info: Applying configuration version '1303649606'
notice: /Stage[main]//Node[cookbook]/Append_if_no_such_
line[enable-ip-conntrack]/Exec[/bin/echo 'ip_conntrack' >> '/etc/
modules']/returns: executed successfully
notice: Finished catalog run in 1.22 seconds
....

==== {Howitworks}

+exec+ 资源将追加指定的文本 +$line+ 到文件 ++$file++，除非它已经存在：

[source,puppet]
----
exec { "/bin/echo '$line' >> '$file'":
    unless => "/bin/grep -Fx '$line' '$file'",
----

现在，+append_if_no_such_line+ 资源已经可以在你的配置清单中使用了。
在本例中，我们已经使用它确保 +/etc/modules+
文件（此文件指定在启动过程中需要加载哪些内核模块）包含如下的行：

----
ip_conntrack
----

==== {Theresmore}

类似的，你可以使用 +define+ 函数对文本文件执行其他细小的操作。例如，
下面的代码片段可以让你在文本文件中执行查找和替换的操作：

[source,puppet]
----
define replace_matching_line( $match, $replace ) {
    exec { "/usr/bin/ruby -i -p -e 'sub(%r{$match}, \"$replace\")'
    $name":
      onlyif    => "/bin/grep -E '$match' $name",
      logoutput => on_failure,
    }
}

replace_matching_line { "/etc/apache2/apache2.conf":
    match   => "LogLevel .*",
    replace => "LogLevel debug",
}
----

==== {Seealso}

- 本章的 <<ch05sec02,{Recipe502}>> 一节
