[[ch02sec11]]
=== Logging debug messages

The truth will make you free. It can be very helpful when debugging problems if you can print out
information at a certain point in the manifest. This is a good way to tell, for example, if a variable
isn't defined or has an unexpected value. Sometimes it's useful just to know that a particular
piece of code has been run. Puppet's +notify+ resource lets you print out such messages.

==== How to do it…

Define a +notify+ resource in your manifest at the point you want to investigate:

----
notify { "Got this far!": }
----

==== How it works…

When this resource is compiled Puppet will print out the message:

----
notice: Got this far!
----

==== There's more…

If you're the kind of brave soul who likes experimenting, and I hope you are, you'll probably
find yourself using debug messages a lot to figure out why your code doesn't work. So knowing
how to get the most out of Puppet's debugging features can be a great help. Some of these
uses are explained in the following text.

===== Printing out variable values

You can reference variables in the message:

----
notify { "operatingsystem is $operatingsystem": }
----

Puppet will interpolate the values in the printout:

......
notice: operatingsystem is Ubuntu
......

===== Printing the full resource path

For more advanced debugging, you may want to use the parameter +withpath+ to see in which
class the +notify+ message was executed:

----
notify { "operatingsystem is $operatingsystem":
    withpath => true,
}
----

Now the notify message will be prefixed with the complete resource path as shown in the
following code snippet:

......
notice: /Stage[main]/Nagios::Target/Notify[operatingsystem is Ubuntu]/
message: operatingsystem is Ubuntu
......

===== Logging messages on the Puppetmaster

Sometimes you just want to log a message on the Puppetmaster, without generating extra
output on the client. You can use the +notice+ function to do this:

----
notice("I am running on node $fqdn")
----

Now when you run Puppet, you will not see any output on the client, but on the Puppetmaster
a message like this will be sent to the syslog:

......
Jan 31 11:51:38 cookbook puppet-master[22640]: (Scope(Node[cookbook])) I
am running on node cookbook.bitfieldconsulting.com
......
