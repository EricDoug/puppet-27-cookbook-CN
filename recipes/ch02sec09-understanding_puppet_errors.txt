[[ch02sec09]]
=== {Recipe209}

停一停！下面是解决错误的时间。Puppet 的错误消息会令人困惑，
有时不会包含关于如何解决问题的实质信息。

==== {Howtodoit}

往往第一步是根据错误消息的文本搜索网页，看看你能找到的关于此错误的解释，
并根据这些有益的建议来修复错误。
下面是一些常见的令人费解的错误以及尽可能明确的解释：

- +Could not evaluate: Could not retrieve information from source(s)+
+
这意味着你为 +source+ 参数指定的一个文件没有被 Puppet 发现。
请检查该文件是否存在，同时检查资源路径是否正确。

- +change from absent to file failed: Could not set file on ensure: 
  No such file or directory+
+
经常导致这一错误的原因是，Puppet 试图在某目录中写文件，而此目录不存在。
检查该目录是否存在或者已经在 Puppet 中被定义，
以及该目录是否为文件资源所要求的目录（这样的目录总是要首先创建的）。

- +undefined method `closed?' for nil:NilClass+
+
--
这种无用的错误消息相当于“出错了”。 这种错误往往可以由许多不同的原因引起，
但你可以进一步检查哪个资源、哪个类或哪个模块所引起的。
一个诀窍是添加 `--debug` 开关运行 puppet 从而获得更多有用的信息：

......
# puppet agent --test --debug
......

你也可以检查 Git 的历史日志看看最近配置清单是否有改动，
这可能是另一种方式来确定是什么扰乱了 Puppet 的正常工作。
--

- +Could not parse for environment --- "--- production": Syntax
  error at end of file at line 1+
+
这可能是由于命令行选项输入错误引起的：例如，你输入了
`puppet -verbose` 而不是 `puppet --verbose` 。这种错误一般是很难被发现的。

- +Could not request certificate: Retrieved certificate does not
  match private key; please remove certificate from server and
  regenerate it with the current key+
+
可能是节点的 SSL 主机密钥已经改变，或 Puppet 的 SSL 目录已被删除，
又或者你试图用与已存在的节点主机名请求新证书。
一般而言，最简单的解决方法是先从客户端删除 Puppet 的 SSL 目录（通常是 ++/etc/puppet/ssl++）
之后在 Puppetmaster 上运行 `puppet cert --clean <nodename>` 。 
然后再次运行 Puppet，生成正确的证书请求。

- +Could not retrieve catalog from remote server: wrong header line format+
+
通常这种错误是在编译模板时出现的。如果在你的 ERB 上有语法错误，就会看到类似的信息，
如下面的代码片段：
+
----
rails_env <%!= app_env %>
----

- +Duplicate definition: X is already defined in [file] at line Y;
  cannot redefine at [file] line Y+
+
--
这曾经引起我的困惑。Puppet 抱怨有重复的资源定义，通常如果你有两个同名的资源，
Puppet 将会帮忙告诉你两者都定义了。 但在这种情况下，它指出了相同的文件和行号。
一个资源怎么可能是其自身的副本呢？

答案是：若它是 ++define++，就会出现这种情况的错误。如果你对一个 +define+ 创建了两个实例，
并且两个实例的所有资源都包含在这个 +define+ 中，他们需要有不同的名字。例如：

[source,puppet]
----
define check_process() {
    exec { "is-process-running?":
        command => "/bin/ps ax |/bin/grep ${name} >/tmp/
         pslist.${name}.txt",
    }
}

check_process { "exim": }
check_process { "nagios": }
----

......
# puppet agent --test
info: Retrieving plugin
err: Could not retrieve catalog from remote server: Error 400 on
SERVER: Duplicate definition: Exec[is-process-running?] is already
defined in file /etc/puppet/manifests/nodes.pp at line 22; cannot
redefine at /etc/puppet/manifests/nodes.pp:22 on node cookbook.
bitfieldconsulting.com
warning: Not using cache on failed catalog
err: Could not retrieve catalog; skipping run
......

因为 +exec+ 资源被命名为 ++is-process-running++。
不管你传递什么参数到 ++define++，都会保持这个相同的名字, Puppet 会拒绝创建它的两个实例。
解决方法是在每个资源的标题部分包含实例的名字，如下所示：

[source,puppet]
----
exec { "is-process-${name}-running?":
    command => "/bin/ps ax |/bin/grep ${name} >
	 /tmp/pslist.${name}.txt",
}
----
--
