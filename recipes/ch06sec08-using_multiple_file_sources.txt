[[ch06sec08]]
=== {Recipe608}

Puppet 的 +file+ 资源有一个实用功能，那就是可以为文件指定多个源。
Puppet 会按顺序查找每一个。如果第一个不存在，就继续查找下一个，以此类推。
你可以利用这个功能指定一个默认文件源的替代品，
若一个甚至一系列替代品不存在就会使用默认的（最后一个列出的）文件源。

==== {Howtodoit}

1. 添加如下的类到你的配置清单：
+
----
class mysql::app-config( $app )
{
    file { "/etc/my.cnf":
        source => [ "puppet:///modules/admin/${app}.my.cnf",
                    "puppet:///modules/admin/generic.my.cnf", ],
    }
}
----

2. 使用如下内容创建 +/etc/puppet/modules/admin/files/minutespace.my.cnf+ 文件：
+
....
# MinuteSpace config file
....

3. 使用如下内容创建 +/etc/puppet/modules/admin/files/generic.my.cnf+ 文件：
+
....
# Generic config file
....

4. 在一个节点中添加如下代码：
+
----
class { "mysql::app-config": app => "minutespace" }
----

5. 运行 Puppet：
+
....
# puppet agent --test
info: Retrieving plugin
info: Caching catalog for cookbook.bitfieldconsulting.com
info: Applying configuration version '1305897071'

notice: /Stage[main]/Mysql::App-config/File[/etc/my.cnf]/ensure:
defined content as '{md5}24f04b960f4d33c70449fbc4d9f708b6'

notice: Finished catalog run in 0.35 seconds
....

6. 检查 Puppet 是否部署了适用于指定应用程序的 +config+ 文件：
+
....
# cat /etc/my.cnf
# MinuteSpace config file
....

7. 现在更改节点的定义为：
+
----
class { "mysql::app-config": app => "shreddit" }
----

8. 再次运行 Puppet：
+
....
# puppet agent --test
info: Retrieving plugin
info: Caching catalog for cookbook.bitfieldconsulting.com
info: Applying configuration version '1305897864'
--- /etc/my.cnf 2011-05-20 13:17:56.006239489 +0000
+++ /tmp/puppet-file20110520-15575-1icobgs-0 2011-05-20
13:24:25.030296062 +0000

@@ -1 +1 @@
-# MinuteSpace config file
+# Generic config file

info: FileBucket adding /etc/my.cnf as {md5}24f04b960f4d33c70449fb
c4d9f708b6

info: /Stage[main]/Mysql::App-config/File[/etc/
my.cnf]: Filebucketed /etc/my.cnf to puppet with sum
24f04b960f4d33c70449fbc4d9f708b6

notice: /Stage[main]/Mysql::App-config/File[/etc/my.cnf]/content:
content changed '{md5}24f04b960f4d33c70449fbc4d9f708b6' to '{md5}
b3a6e744c3ab78dfb20e46ff55f6c33c'

notice: Finished catalog run in 0.93 seconds
....

==== {Howitworks}

我们定义了 +/etc/my.cnf+ 文件有如下的两个源：

----
file { "/etc/my.cnf":
    source => [ "puppet:///modules/admin/${app}.my.cnf",
                "puppet:///modules/admin/generic.my.cnf", ],
}
----

+$app+ 的值由任何一个使用它的类传递。在第一个例子中，我们为 +app+ 传递了 ++minutespace++：

----
class { "mysql::app-config": app => "minutespace" }
----

Puppet 将首先查找 +modules/admin/files/minutespace.my.cnf+ 文件。
由于此文件存在，所以就会使用它。到目前为止，一切正常。

然后我们把 +app+ 的值更改为 shreddit。Puppet 现在会查找 
+modules/admin/files/shreddit.my.cnf+ 文件。 
由于此文件不存在，所以 Puppet 试图查找源列表中的下一个文件：
++modules/admin/files/generic.my.cnf++。因为此文件存在，所以会将它部署到节点。


==== {Theresmore}

你可以在任何一个 +file+ 资源中使用这种手段来处理。例如，
一些节点可能需要针对特定主机的配置，而另一些节点则不需要，你可以使用类似于如下的代码实现：

----
file { "/etc/stuff.cfg":
    source => [ "puppet:///modules/stuff/${hostname}.cfg",
                "puppet:///modules/stuff/generic.cfg" ],
}
----

然后将你的通用配置放在 +generic.cfg+ 文件中。如果主机 +cartman+ 需要一个特殊的配置，
将适用于此主机的配置放在 +cartman.cfg+ 文件中。
+cartman.cfg+ 文件优先于 +generic.cfg+ 文件，因为它在源数组中是首先被列出的。

==== {Seealso}

- 第 4 章的 <<ch04sec06,{Recipe406}>> 一节
